- name: Get oVirt VMs
  ovirt.ovirt.ovirt_vm_info:
    auth:
      url: "{{ ovirt_url }}"
      username: "{{ ovirt_username }}"
      password: "{{ ovirt_password }}"
      ca_file: "{{ ovirt_cafile }}"
  register: ovirt_vms

- name: Get OpenStack flavors
  openstack.cloud.flavor_info:
    auth:
      auth_url: "{{ openstack_auth_url }}"
      username: "{{ openstack_username }}"
      password: "{{ openstack_password }}"
      project_name: "{{ openstack_project_name }}"
      user_domain_name: "{{ openstack_user_domain_name }}"
      project_domain_name: "{{ openstack_project_domain_name }}"
  register: openstack_flavors

- name: Get OpenStack networks
  openstack.cloud.network_info:
    auth:
      auth_url: "{{ openstack_auth_url }}"
      username: "{{ openstack_username }}"
      password: "{{ openstack_password }}"
      project_name: "{{ openstack_project_name }}"
      user_domain_name: "{{ openstack_user_domain_name }}"
      project_domain_name: "{{ openstack_project_domain_name }}"
  register: openstack_networks

- name: Get OpenStack ports
  openstack.cloud.port_info:
    auth:
      auth_url: "{{ openstack_auth_url }}"
      username: "{{ openstack_username }}"
      password: "{{ openstack_password }}"
      project_name: "{{ openstack_project_name }}"
      user_domain_name: "{{ openstack_user_domain_name }}"
      project_domain_name: "{{ openstack_project_domain_name }}"
  register: openstack_ports

- name: Get OpenStack volumes
  openstack.cloud.volume_info:
    auth:
      auth_url: "{{ openstack_auth_url }}"
      username: "{{ openstack_username }}"
      password: "{{ openstack_password }}"
      project_name: "{{ openstack_project_name }}"
      user_domain_name: "{{ openstack_user_domain_name }}"
      project_domain_name: "{{ openstack_project_domain_name }}"
  register: openstack_volumes

- name: Recreate oVirt VMs in OpenStack
  block:
    - name: Get corresponding volumes
      set_fact:
        vm_volumes: "{{ openstack_volumes.volumes | selectattr('metadata.workload_name', 'equalto', vm.name) | sort(attribute='metadata.disk_order') | list }}"
    
    - name: Get corresponding nics
      set_fact:
        vm_nics: "{{ openstack_ports.ports | selectattr('binding_profile.workload_name', 'equalto', vm.name) | sort(attribute='binding_profile.nic_order') | list }}"

    - name: Create VM with boot volume
      openstack.cloud.server:
        state: present
        name: "{{ vm.name }}"
        image: ""
        flavor: "{{ openstack_flavors.flavors | selectattr('name', 'equalto', vm.name) | first }}"
        boot_volume: "{{ vm_volumes[0].id }}"
        nics: "{{ vm_nics | map(attribute='id') | list }}"
        auth:
          auth_url: "{{ openstack_auth_url }}"
          username: "{{ openstack_username }}"
          password: "{{ openstack_password }}"
          project_name: "{{ openstack_project_name }}"
          user_domain_name: "{{ openstack_user_domain_name }}"
          project_domain_name: "{{ openstack_project_domain_name }}"

    - name: Attach additional volumes
      openstack.cloud.volume_attachment:
        state: present
        server: "{{ vm.name }}"
        volume: "{{ item.id }}"
        auth:
          auth_url: "{{ openstack_auth_url }}"
          username: "{{ openstack_username }}"
          password: "{{ openstack_password }}"
          project_name: "{{ openstack_project_name }}"
          user_domain_name: "{{ openstack_user_domain_name }}"
          project_domain_name: "{{ openstack_project_domain_name }}"
      loop: "{{ vm_volumes[1:] }}"
  loop: "{{ ovirt_vms.ovirt_vms | selectattr('name', 'in', ovirt_target_vms) | list }}"
  loop_control:
    loop_var: vm

